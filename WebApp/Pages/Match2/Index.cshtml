@page
@model WebApp.Pages.Match2.IndexModel
@{
}

<div class="container">
    <h1 class="mt-4">Reversi Game</h1>
    <div class="row">
        <div class="col-12">
            <div class="board">
                @for (int i = 0; i < 8; i++)
                {
                    <div class="row">
                        @for (int j = 0; j < 8; j++)
                        {
                            <div class="col cell">
                                <button class="btn btn-light" onclick="makeMove(@i, @j)">
                                    @if (Model.Game.Board[i * 8 + j] == 1)
                                    {
                                        <span class="text-dark">&#9679;</span>
                                    }
                                    else if (Model.Game.Board[i * 8 + j] == 2)
                                    {
                                        <span class="text-light">&#9679;</span>
                                    }
                                </button>
                            </div>
                        }
                    </div>
                }
            </div>
            <div class="mt-4">
                <h3 id="turnIndicator"></h3>
            </div>
        </div>
    </div>
</div>

<style>
    .cell {
        width: 50px;
        height: 50px;
        background-color: darkgreen;
        align-items: center;
        justify-content: center;
        transition: background-color 0.3s;
        border: none;
    }

        .cell .btn-light {
            width: 100%;
            height: 100%;
            padding: 0;
            border: none;
            background: none;
        }

    .text-dark {
        color: black;
    }

    .text-light {
        color: white;
    }
</style>

<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/3.1.18/signalr.min.js"></script>
<script>
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/gameHub")
        .build();

    connection.start().then(function () {
        console.log("Connected to SignalR hub");
    }).catch(function (err) {
        return console.error(err.toString());
    });

    connection.on("UpdateGame", function (game) {
        for (let i = 0; i < game.board.length; i++) {
            const row = Math.floor(i / 8);
            const col = i % 8;
            const cell = document.querySelector(`button[onclick="makeMove(${row}, ${col})"]`);
            cell.innerHTML = '';

            if (game.board[i] == 1) {
                cell.innerHTML = '<span class="text-dark">&#9679;</span>';
            } else if (game.board[i] == 2) {
                cell.innerHTML = '<span class="text-light">&#9679;</span>';
            }
        }
        const turnIndicator = document.getElementById('turnIndicator');
        turnIndicator.innerText = game.isPlayer1Turn ? "Player 1's Turn (Dark)" : "Player 2's Turn (Light)";
    });

    function makeMove(row, col) {
        connection.invoke("MakeMove", row, col).catch(function (err) {
            return console.error(err.toString());
        });
    }
</script>
